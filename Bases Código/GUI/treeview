from tkinter import *
from tkinter import ttk

window = Tk()
window.geometry("1000x500") #(width x height) em px
window.title("Trails App")
window.resizable(0,0) #colocar 1 se quiser a opcao de redimensionar

screenWidth = window.winfo_screenwidth()
screenHeight = window.winfo_screenheight()

appWidth = 1000 #colocar a width e height do app
appHeight = 500

x = (screenWidth/2) - (appWidth/2)
y = (screenHeight/2) - (appHeight/2)
window.geometry(f'{appWidth}x{appHeight}+{int(x)}+{int(y)}')


# BASE DA TREEVIEW -------------------------------------
tree = ttk.Treeview(window, selectmode= "browse", columns = ("Col1", "Col2", "Col3"), show = "headings")
tree.place(x= 00, y= 00)
tree.column("coluna", width= 00 , anchor = W) # c - centro; e -  direita; w - esquerda
tree.heading("Nome", text ="Nome")

# ADD NA TREEVIEW
tree.insert("", "end", values = (campos[0], campos[1], [2]))


# APAGAR TUDO DE UMA TREEVIEW
tree.delete(*tree.get_children())


# PEGA DE UMA TREEVIEW E COLOCA NA LISTBOX ----------------------------------------------
def adcFavorito():
    pos = tree.selection()

    # Iterar sobre os índices selecionados
    for index in pos:
        # Obter os valores do item selecionado na treeview
        values = tree.item(index)['values'][0]
        
        # Adicionar os valores na listbox
        listBox.insert('end', values)
        
        


# CONTAR QUANTOS ITENS TEM NA TREEVIW
 
conta = len(tree.get_children())
entryNumProvas.delete(0, END)  # Limpa o valor atual do widget Entry
entryNumProvas.insert(0, str(conta))

lblNumProvas = Label (window, text="Número de provas: ")
lblNumProvas.place(x=80, y=345)
numProvas = IntVar()
entryNumProvas = Entry(window, textvariable=numProvas)
entryNumProvas.place(x=200, y=347)




# PEGAR DE UMA LISTA/ARQUIVO TXT E COLOCAR NA TREEVIEW
file = ".//testes anteriores//normal21-22//ficheiros//trails.txt"
f = open(file, "r", encoding="utf-8")
lista= f.readlines()
f.close()
for linha in lista:
    campos = linha.split(";")
    tree.insert("", "end", values=(campos[0], campos[1], campos[2]))




# ADICIONAR NA TREEVIEW COM ENTRY E RADIOBUTTONS
def adicionar():
    if name.get() == "":
        messagebox.showwarning("Inscrição", "Insira um nome para a inscrição")
    else:
        nome = name.get()
        perfil = selected.get()
        info = [nome, perfil]
        tree.insert("", "end", values=info)

name = StringVar()
lblNome = Label(window, text="Nome:")
entryNome = Entry(window, width=15, textvariable=name)
lblNome.place(x=20, y= 20)
entryNome.place(x=78, y=22)

selected = StringVar()
rdbtnDoc = Radiobutton(frameInscricao, text="Docente", value="Docente", variable=selected)
rdbtnStud = Radiobutton(frameInscricao, text="Estudante", value="Estudante", variable=selected)



# PEGAR TODOS OS VALORES DE UMA TREEVIEW E ADD NUM ARQUIVO TXT
def guardar():
    with open("FILE", "a", encoding="utf-8") as f:
        for i in tree.get_children():
            valores = tree.item(i)["values"]
            f.write(f"{valores[0]};{valores[1]}\n")


# LINHA EM FOCUS
pos = tree.selection()


# PEGA O MENOR VALOR DE UMA COLUNA ESPECIFICA DA TREEVIEW
def infoTreeview():
    """Mostra quantas atvs estão sendo mostradas na treeview e qual o melhor tempo delas"""
    #conta
    conta = len(tree.get_children())
    entryNumProvas.delete(0, END)  # Limpa o valor atual do widget Entry
    entryNumProvas.insert(0, str(conta)) #Adiciona valor novo
    #tempo
    mTempo = float('inf')
    for i in tree.get_children():
        tempo = float(tree.item(i)["values"][2])
        if tempo < mTempo:
            mTempo = tempo
    entryMelhorTempo.delete(0, END)
    entryMelhorTempo.insert(0, str(mTempo))



#PEGAR DE UMA LISTBOX E COLOCAR NA TREEVIEW
def passTreeview():
    pos = lboxAtv.curselection()
    file = ".//testes anteriores//normal20-21//ficheiros//tempos.txt"
    f = open(file, "r", encoding="utf-8")
    lista = f.readlines()
    f.close()
    pos= str(pos[0])
    tree.delete(*tree.get_children())
    for linha in lista:
        div = linha.strip().split(";")
        if div[0] == pos:
            tree.insert("", "end", values=(div[1], div[2], div[3]))

        #OU--------------------------------

def seeInTreeview():
    cat =""
    pos = listBoxCategorias.curselection()
    if pos == (0,):
        cat = "Drama"
    elif pos == (1,):
        cat = "Comédia"
    elif pos == (2,):
        cat = "Thriller"
    elif pos == (3,):
        cat = "Animação"
    elif pos == (4,):
        cat = "Ação"
    elif pos == (5,):
        cat = "Terror"

    file = ".//testes anteriores//teste2-20-21//ficheiros//filmes.txt"
    f = open(file, "r", encoding="utf-8")
    lista = f.readlines()
    f.close()
    tree.delete(*tree.get_children())
    
    for linha in lista:
        div = linha.strip().split(";")    
        if div[0] == cat:
            tree.insert("", "end", values=(div[1], div[2]))

        #OU---------------------------------

"""def seeInTreeview():
    # Define a list of category names
    categories = ["Drama", "Comédia", "Thriller", "Animação", "Ação", "Terror"]

    # Get the index of the selected item in listBoxCategorias
    pos = listBoxCategorias.curselection()[0]

    # Look up the category name using the index
    cat = categories[pos]

    # Read the contents of the text file into a list
    with open('.//testes anteriores//teste2-20-21//ficheiros//filmes.txt', 'r', encoding="utf-8") as file:
        lines = file.readlines()

    # Iterate over each line in the list
    for line in lines:
        # Split the line into fields using the ';' delimiter
        fields = line.strip().split(';')

        # Extract the category name from the line (assumed to be the first field)
        category_name = fields[0]

        # Compare the category name with the selected category
        if category_name == cat:
            # Extract other fields from the line and insert them into the treeview
            title = fields[1]
            year = fields[2]
            tree.insert("", "end", values=(title, year))"""

# RETORNA O FILME MAIS VISTO DE UM ARQUIVO
def verMais():
    conta = len(tree.get_children())
    entryNfilme.delete(0, END)  # Limpa o valor atual do widget Entry
    entryNfilme.insert(0, str(conta))

    ficheiro = ".//testes anteriores//teste2-20-21//ficheiros//filmes.txt"
    f = open(ficheiro, "r", encoding="utf-8")
    lista = f.readlines()
    f.close()

    cat =""
    pos = listBoxCategorias.curselection()
    if pos == (0,):
        cat = "Drama"
    elif pos == (1,):
        cat = "Comédia"
    elif pos == (2,):
        cat = "Thriller"
    elif pos == (3,):
        cat = "Animação"
    elif pos == (4,):
        cat = "Ação"
    elif pos == (5,):
        cat = "Terror"
    
    filmeMaisVisto = None
    maiorVisu = 0
    for linha in lista:
        div = linha.strip().split(";")
        if div[0] == cat:
            visu = int(div[2])
            if visu > maiorVisu:
                filmeMaisVisto = div[1]
                maiorVisu = visu
    
    entryFilmeMaisVisto.delete("0", END)
    entryFilmeMaisVisto.insert("0", filmeMaisVisto)

# PEGAR DADOS DA LINHA SELECIONADA NA TREEVIW E COLOCAR NA ENTRY
row_id = tree.focus()  # pega o id da linha ativa 
linha = tree.item(row_id)
entry.set(linha["values"][0])
entry2.set(linha["values"][1])
entry3.set(linha["values"][2])

# MENOR TEMPO
def menorTempoTreeview():
    """Mostra qual o melhor/menor tempo das atividades mostradas na treeview"""
    #conta
    conta = len(tree.get_children())
    entryNumProvas.delete(0, END)  # Limpa o valor atual do widget Entry
    entryNumProvas.insert(0, str(conta)) #Adiciona valor novo
    #tempo
    mTempo = float('inf')
    for i in tree.get_children():
        tempo = float(tree.item(i)["values"][2])
        if tempo < mTempo:
            mTempo = tempo
    entryMelhorTempo.delete(0, END)
    entryMelhorTempo.insert(0, str(mTempo))

window.mainloop()